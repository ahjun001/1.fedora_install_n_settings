---
# Install Vim based on the display server
- name: Detect the display server (Wayland or X11)
  ansible.builtin.shell: |
    if echo $XDG_SESSION_TYPE | grep -q "wayland"; then
      echo "wayland"
    else
      echo "x11"
    fi
  register: display_server
  changed_when: false

- name: Install vim for Wayland
  become: true
  ansible.builtin.package:
    name: vim
    state: latest
  when: display_server.stdout == "wayland"

- name: Install vim-X11 for X11
  become: true
  ansible.builtin.package:
    name: vim-X11
    state: latest
  when: display_server.stdout == "x11"

- name: Test if the source exists, fail if it does not
  ansible.builtin.file:
    path: /home/{{ ansible_user }}/Documents/Github/2.1.vim/1.Install/vimrc
    state: file

- name: Ensure ~/.vim/ directory exists
  ansible.builtin.file:
    path: /home/{{ ansible_user }}/.vim
    state: directory
    mode: "0755"
    group: "{{ ansible_user }}"
    owner: "{{ ansible_user }}"

- name: Create symbolic link for vimrc
  ansible.builtin.file:
    src: /home/{{ ansible_user }}/Documents/Github/2.1.vim/1.Install/vimrc
    dest: /home/{{ ansible_user }}/.vim/vimrc
    state: link
    force: yes
# - name: Ensure directories exist, create if it does not
#   ansible.builtin.file:
#     path: "{{ item }}"
#     state: directory
#     mode: "0755"
#     group: "{{ ansible_user }}"
#     owner: "{{ ansible_user }}"
#   loop:
#     - /home/{{ ansible_user }}/.vim
#     - /home/{{ ansible_user }}/.vim/swap
#     - /home/{{ ansible_user }}/.vim/backup
#     - /home/{{ ansible_user }}/.vim/undo
#     - /home/{{ ansible_user }}/.vim/view
