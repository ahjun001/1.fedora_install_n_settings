---
# task file for bashrc_edit

- name: append bashrc with a blank line
  ansible.builtin.lineinfile:
    path: /home/{{ ansible_user }}/.bashrc
    line: " "
    state: present

- name: Add aliases and exports to ~/.bashrc
  ansible.builtin.lineinfile:
    path: /home/{{ ansible_user }}/.bashrc
    regexp: "^{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  loop:
    - {
        regexp: "# --- added by Ansible ---",
        line: "# --- added by Ansible ---",
      }
    - {
        regexp: "alias stest_speedtest=",
        line: "alias stest_speedtest='speedtest >/dev/null 2>&1 &'",
      }
    - {
        regexp: "alias rootfind=",
        line: "alias rootfind='sudo find / \\( -path \"/.snapshots\" -o -path \"/home/.snapshots\" -o -path \"/run\" \\) -prune -o '",
      }
    - {
        regexp: "alias clear_GPUCache=",
        line: "alias clear_GPUCache='find ~/.config -type d -name GPUCache -exec rm -r {} \\;'",
      }
    - {
        regexp: "alias pj_update_fedora=",
        line: "alias pj_update_fedora='sudo dnf5 upgrade --refresh -y && sudo dnf5 autoremove -y && sudo dnf5 clean all'",
      }
    - { regexp: "export VISUAL=", line: "export VISUAL=nvim" }
    - { regexp: "export EDITOR=", line: "export EDITOR=nvim" }

- name: check if last line of .bashrc is empty
  ansible.builtin.shell: "[[ -z $(tail -n 1 /home/{{ ansible_user }}/.bashrc ) ]]"
  register: result
  failed_when: false
  changed_when: false

- name: Append blank line to .bashrc if needed
  ansible.builtin.shell: "echo '' >>  /home/{{ ansible_user }}/.bashrc"
  when: result.rc != 0
